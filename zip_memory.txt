==8314== Memcheck, a memory error detector
==8314== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8314== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==8314== Command: ./zip text 3 output
==8314== Parent PID: 1982
==8314== 
==8314== Thread 2:
==8314== Conditional jump or move depends on uninitialised value(s)
==8314==    at 0x109807: readFreq (zip.c:136)
==8314==    by 0x49E6B42: start_thread (pthread_create.c:442)
==8314==    by 0x4A77BB3: clone (clone.S:100)
==8314== 
==8314== Thread 1:
==8314== Conditional jump or move depends on uninitialised value(s)
==8314==    at 0x10A04C: main (zip.c:282)
==8314== 
==8314== Conditional jump or move depends on uninitialised value(s)
==8314==    at 0x10A197: main (zip.c:295)
==8314== 
==8314== Thread 2:
==8314== Conditional jump or move depends on uninitialised value(s)
==8314==    at 0x10991B: buildTree (zip.c:156)
==8314==    by 0x49E6B42: start_thread (pthread_create.c:442)
==8314==    by 0x4A77BB3: clone (clone.S:100)
==8314== 
==8314== Thread 1:
==8314== Conditional jump or move depends on uninitialised value(s)
==8314==    at 0x1094C8: writeFile (zip.c:54)
==8314==    by 0x109503: writeFile (zip.c:56)
==8314==    by 0x10A634: main (zip.c:352)
==8314== 
==8314== Conditional jump or move depends on uninitialised value(s)
==8314==    at 0x109512: writeFile (zip.c:58)
==8314==    by 0x109503: writeFile (zip.c:56)
==8314==    by 0x10A634: main (zip.c:352)
==8314== 
==8314== Conditional jump or move depends on uninitialised value(s)
==8314==    at 0x10955C: writeFile (zip.c:63)
==8314==    by 0x109503: writeFile (zip.c:56)
==8314==    by 0x10A634: main (zip.c:352)
==8314== 
==8314== Conditional jump or move depends on uninitialised value(s)
==8314==    at 0x109570: writeFile (zip.c:63)
==8314==    by 0x109503: writeFile (zip.c:56)
==8314==    by 0x10A634: main (zip.c:352)
==8314== 
==8314== Syscall param write(buf) points to uninitialised byte(s)
==8314==    at 0x4A66A6F: __libc_write (write.c:26)
==8314==    by 0x4A66A6F: write (write.c:24)
==8314==    by 0x49DCF6C: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1180)
==8314==    by 0x49DEA60: new_do_write (fileops.c:448)
==8314==    by 0x49DEA60: _IO_new_do_write (fileops.c:425)
==8314==    by 0x49DEA60: _IO_do_write@@GLIBC_2.2.5 (fileops.c:422)
==8314==    by 0x49DE057: _IO_file_close_it@@GLIBC_2.2.5 (fileops.c:135)
==8314==    by 0x49D0E0E: fclose@@GLIBC_2.2.5 (iofclose.c:53)
==8314==    by 0x10A643: main (zip.c:353)
==8314==  Address 0x4b891e0 is 0 bytes inside a block of size 4,096 alloc'd
==8314==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==8314==    by 0x49D0C23: _IO_file_doallocate (filedoalloc.c:101)
==8314==    by 0x49DFD5F: _IO_doallocbuf (genops.c:347)
==8314==    by 0x49DEFDF: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:744)
==8314==    by 0x49D96B9: fputc (fputc.c:38)
==8314==    by 0x109599: writeFile (zip.c:67)
==8314==    by 0x109503: writeFile (zip.c:56)
==8314==    by 0x10A634: main (zip.c:352)
==8314== 
==8314== Conditional jump or move depends on uninitialised value(s)
==8314==    at 0x109771: encodeFile (zip.c:115)
==8314==    by 0x10A6D0: main (zip.c:362)
==8314== 
==8314== Conditional jump or move depends on uninitialised value(s)
==8314==    at 0x10964E: getValue (zip.c:83)
==8314==    by 0x109668: getValue (zip.c:84)
==8314==    by 0x10976C: encodeFile (zip.c:119)
==8314==    by 0x10A6D0: main (zip.c:362)
==8314== 
==8314== Conditional jump or move depends on uninitialised value(s)
==8314==    at 0x109677: getValue (zip.c:87)
==8314==    by 0x109668: getValue (zip.c:84)
==8314==    by 0x10976C: encodeFile (zip.c:119)
==8314==    by 0x10A6D0: main (zip.c:362)
==8314== 
==8314== Conditional jump or move depends on uninitialised value(s)
==8314==    at 0x1096A0: getValue (zip.c:90)
==8314==    by 0x109668: getValue (zip.c:84)
==8314==    by 0x10976C: encodeFile (zip.c:119)
==8314==    by 0x10A6D0: main (zip.c:362)
==8314== 
==8314== Conditional jump or move depends on uninitialised value(s)
==8314==    at 0x1096B4: getValue (zip.c:90)
==8314==    by 0x109668: getValue (zip.c:84)
==8314==    by 0x10976C: encodeFile (zip.c:119)
==8314==    by 0x10A6D0: main (zip.c:362)
==8314== 
==8314== Conditional jump or move depends on uninitialised value(s)
==8314==    at 0x1096C0: getValue (zip.c:92)
==8314==    by 0x109668: getValue (zip.c:84)
==8314==    by 0x10976C: encodeFile (zip.c:119)
==8314==    by 0x10A6D0: main (zip.c:362)
==8314== 
==8314== 
==8314== HEAP SUMMARY:
==8314==     in use at exit: 20,672 bytes in 38 blocks
==8314==   total heap usage: 59 allocs, 21 frees, 63,388 bytes allocated
==8314== 
==8314== 544 bytes in 1 blocks are definitely lost in loss record 1 of 3
==8314==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==8314==    by 0x10A475: main (zip.c:322)
==8314== 
==8314== 20,128 (544 direct, 19,584 indirect) bytes in 1 blocks are definitely lost in loss record 3 of 3
==8314==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==8314==    by 0x1098E9: buildTree (zip.c:155)
==8314==    by 0x49E6B42: start_thread (pthread_create.c:442)
==8314==    by 0x4A77BB3: clone (clone.S:100)
==8314== 
==8314== LEAK SUMMARY:
==8314==    definitely lost: 1,088 bytes in 2 blocks
==8314==    indirectly lost: 19,584 bytes in 36 blocks
==8314==      possibly lost: 0 bytes in 0 blocks
==8314==    still reachable: 0 bytes in 0 blocks
==8314==         suppressed: 0 bytes in 0 blocks
==8314== 
==8314== Use --track-origins=yes to see where uninitialised values come from
==8314== For lists of detected and suppressed errors, rerun with: -s
==8314== ERROR SUMMARY: 6389 errors from 17 contexts (suppressed: 0 from 0)
